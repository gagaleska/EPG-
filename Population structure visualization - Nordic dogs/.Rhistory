knitr::opts_chunk$set(echo = TRUE)
# Load the required libraries
library(dartR)
# Load the required libraries
library(dartR)
# library(detectRUNS)
library(adegenet)
library(tidyverse)
# Load the required libraries
library(proxy)
library(iterpc)
library(expm)
library(directlabels)
library(MASS)
pwd()
getwd()
setwd("/home/evgenija/Desktop/Evgenija\ Gagaleska /famnit\ 3rd\ year/EPG-/Population\ structure\ visualization\ -\ Nordic\ dogs")
getwd()
corr_data <- paste("./plink",
"--file NordicDogs_4mars2014",                # PLINK binary input files (prefix only)
"--export ped",                 # Specify 'ped' as the output format
"--allow-extra-chr",
"--chr-set 38",
"--out NordicDogs_corr")        # Specify output prefix
system(corr_data)
dogs<-read.PLINK("NordicDogs.raw", ped.file = "NordicDogs_corr.ped", map.file = "NordicDogs_corr.map")
dogs<-gl.compliance.check(dogs)
![Calculation PCA](calc_pca.png)
pca <- gl.pcoa(dogs)
gl.pcoa.plot(x = dogs, glPca = pca)
gl.pcoa.plot(x = dogs, glPca = pca, zaxis = 3)
gl.tree.nj(dogs, type = "phylogram")
str <- gl.run.structure(dogs[,1:1000], k.range= 1:6, num.k.rep = 2, exec = "./structure", numreps=200, burnin=100)
gl.evanno(str)
gl.plot.structure(str, K=2)
gl.plot.structure(str, K=4)
gl.plot.structure(str, K=2)
coordinates <- read.table("koordinate.txt",header = T)
as.data.frame(coordinates)
gl.ibd(dogs, coordinates = coordinates[,2-3], distance = "Fst")
#Prepeare the matrices
Dgeo <- as.matrix(dist(coordinates[,2-3]))
Dgen <- as.matrix(dist(as.matrix(dogs)))
#Calculate density
dens <- kde2d(as.vector(Dgeo), as.vector(Dgen), n=300)
#Create color palette
myPal <- colorRampPalette(c("white", "blue", "gold", "orange", "red"))
#Plot all together
plot(Dgeo, Dgen, pch=20,cex=.5)
image(dens, col=transp(myPal(300),.7), add=TRUE)
#Plot all together
plot(Dgeo, Dgen, pch=20,cex=.5)
image(dens, col=transp(myPal(300),.7), add=TRUE)
# Calculate distance
dist_lm <- lm(as.vector(Dgen) ~ as.vector(Dgeo))
abline(dist_lm)
# Prepare the matrices
Dgeo <- as.matrix(dist(coordinates[, 2:3]))
Dgen <- as.matrix(dist(as.matrix(dogs)))
# Calculate density
dens <- kde2d(as.vector(Dgeo), as.vector(Dgen), n = 300)
# Create color palette
myPal <- colorRampPalette(c("white", "blue", "gold", "orange", "red"))
# Define transparency function if not defined
transp <- function(colors, alpha = 0.7) {
rgb(t(col2rgb(colors) / 255), alpha = alpha)
}
# Plot all together
plot(as.vector(Dgeo), as.vector(Dgen), pch = 20, cex = .5)
image(dens, col = transp(myPal(300), .7), add = TRUE)
# Calculate distance
dist_lm <- lm(as.vector(Dgen) ~ as.vector(Dgeo))
abline(dist_lm, col = "black", lwd = 2)
#Calculates an identity by descent matrix
gl.grm(dogs)
install.packages("rrBLUP")
library(rrBLUP)
#Calculates an identity by descent matrix
gl.grm(dogs)
install.packages("gplots")
library(gplots)
#Calculates an identity by descent matrix
gl.grm(dogs)
gl.grm.network(x=dogs, G = gl.grm(dogs), method = "kk")
gl.pcoa.plot(x = dogs, glPca = pca)
gl.pcoa.plot(x = dogs, glPca = pca, zaxis = 3)
gl.tree.nj(dogs, type = "phylogram")
str <- gl.run.structure(dogs[,1:1000], k.range= 1:6, num.k.rep = 2, exec = "./structure", numreps=200, burnin=100)
gl.evanno(str)
gl.evanno(str)
gl.plot.structure(str, K=2)
gl.plot.structure(str, K=4)
coordinates <- read.table("koordinate.txt",header = T)
as.data.frame(coordinates)
gl.ibd(dogs, coordinates = coordinates[,2-3], distance = "Fst")
#Calculates an identity by descent matrix
gl.grm(dogs)
gl.grm.network(x=dogs, G = gl.grm(dogs), method = "kk")
gl.report.diversity(dogs)
knitr::opts_chunk$set(echo = TRUE)
# Load the required libraries
library(dartR)
# library(detectRUNS)
library(adegenet)
library(tidyverse)
# Load the required libraries
library(proxy)
library(iterpc)
library(expm)
library(directlabels)
library(MASS)
# Load the required libraries
library(dartR)
library(adegenet)
library(tidyverse)
library(proxy)
library(iterpc)
library(expm)
library(directlabels)
library(MASS)
corr_data <- paste("./plink",
"--file NordicDogs_4mars2014",                # PLINK binary input files (prefix only)
"--export ped",                 # Specify 'ped' as the output format
"--allow-extra-chr",
"--chr-set 38",
"--out NordicDogs_corr")        # Specify output prefix
system(corr_data)
dogs<-read.PLINK("NordicDogs.raw", ped.file = "NordicDogs_corr.ped", map.file = "NordicDogs_corr.map")
dogs<-read.PLINK("NordicDogs.raw", ped.file = "NordicDogs_corr.ped", map.file = "NordicDogs_corr.map")
dogs<-gl.compliance.check(dogs)
pca <- gl.pcoa(dogs)
gl.ibd(dogs, coordinates = coordinates[,2-3], distance = "Fst")
gl.ibd(dogs, coordinates = coordinates[,2-3], distance = "Fst")
coordinates <- read.table("koordinate.txt",header = T)
as.data.frame(coordinates)
gl.ibd(dogs, coordinates = coordinates[,2-3], distance = "Fst")
#Calculates an identity by descent matrix
gl.grm(dogs)
library(rrBLUP)
